ThreadLocal	"<span style=""color: rgb(53, 56, 51);"">This class provides thread-local variables. These variables differ from their normal counterparts in that each thread that accesses one (via its&nbsp;</span>get<span style=""color: rgb(53, 56, 51);"">&nbsp;or&nbsp;</span>set<span style=""color: rgb(53, 56, 51);"">&nbsp;method) has its own, independently initialized copy of the variable.&nbsp;</span>ThreadLocal<span style=""color: rgb(53, 56, 51);"">&nbsp;instances are typically private static fields in classes that wish to associate state with a thread (e.g., a user ID or Transaction ID).</span>"
QueueingFuture&lt;V&gt;	Subclass of FutureTask
RejectedExecutionHandler	A handler for tasks that cannot be executed by a&nbsp;ThreadPoolExecutor.<div><br>void rejectedExecution(Runnable&nbsp;r,&nbsp;ThreadPoolExecutor&nbsp;executor)<div>Method that may be invoked by a&nbsp;ThreadPoolExecutor&nbsp;when&nbsp;execute&nbsp;cannot accept a task.</div></div>
SynchronousQueue&lt;E&gt; (Java)	"<span style=""color: rgb(53, 56, 51);"">A&nbsp;</span><a href=""https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/BlockingQueue.html"">blocking queue</a><span style=""color: rgb(53, 56, 51);"">&nbsp;in which each insert operation must wait for a corresponding remove operation by another thread, and vice versa. A synchronous queue does not have any internal capacity, not even a capacity of one. You cannot&nbsp;</span>peek<span style=""color: rgb(53, 56, 51);"">&nbsp;at a synchronous queue because an element is only present when you try to remove it; you cannot insert an element (using any method) unless another thread is trying to remove it; you cannot iterate as there is nothing to iterate. The&nbsp;</span><em>head</em><span style=""color: rgb(53, 56, 51);"">&nbsp;of the queue is the element that the first queued inserting thread is trying to add to the queue; if there is no such queued thread then no element is available for removal and&nbsp;</span>poll()<span style=""color: rgb(53, 56, 51);"">&nbsp;will return&nbsp;</span>null<span style=""color: rgb(53, 56, 51);"">. For purposes of other&nbsp;</span>Collection<span style=""color: rgb(53, 56, 51);"">&nbsp;methods (for example&nbsp;</span>contains<span style=""color: rgb(53, 56, 51);"">), a&nbsp;</span>SynchronousQueue<span style=""color: rgb(53, 56, 51);"">&nbsp;acts as an empty collection. This queue does not permit&nbsp;</span>null<span style=""color: rgb(53, 56, 51);"">&nbsp;elements.</span>"
Components of an Algorithm	Input<div>Output</div><div>Definiteness</div><div>Finiteness</div><div>Correctness</div><div>Time Complexity</div><div>Space Complexity</div><div>- Instruction</div><div>- Data</div><div>- Environment</div>
Key Data Structures(8)	Graphs<div>Arrays</div><div>Lists</div><div>Maps</div><div>Sets</div><div>Stacks</div><div>Queues</div><div>Trees</div>
HashSet vs LinkedHashSet vs TreeSet	HashSet - order indeterminant and not constant<div>LinkedHashSet - order based on insertion</div><div>TreeSet - ordered by 'natural ordering' or Comparator</div>
DAG	Directed Acyclic Graph&nbsp;<div>Finite&nbsp;directed graph&nbsp;with no&nbsp;directed cycles.<br></div>
Algorithm Features	1) Correctness<div>2) Maintainability</div><div>3) Efficiency</div><div>4) Can we do better?</div>
Breadth First Search(BFS)	Search algorithm that finds items nearest origin first<div>Performed on Trees or graphs</div><div>Utilizes a queue</div>
Depth First Search(DFS)	Search algorithm that seeks the item as far down a path as it can before back tracking and trying another path<div>Performed on trees and graphs</div><div>Utilizes a stack</div>
Search Algorithms	Linear Search O(N)<div>BinarySearch O(log n)</div><div>Interpolation Search</div><div>Trees and Graphs</div><div>Breadth First Search</div><div>Depth First Search</div>
Binary Tree	Data Structure where every node has two children(left&amp;right)<div>Nodes with no children are call leaf nodes.</div><div><br></div><div>Algorithms</div><div>Traversal: Preorder, Inorder, Postorder, Level Order</div><div>Search: BFS, DFS</div>
Balanced Binary Search Tree	A binary tree in which each nodes' left and right subtrees' heights differ by no more 1
ADT(Definition)	Abstract Data Type
Optimization Technique<div>B.U.D.</div>	B. Bottlenecks<div>&nbsp; &nbsp; Identify bottlenecks and optimize those parts</div><div>U. Unnecessary work</div><div>Look for ways to remove repeated work or unnecessary type conversion</div><div><br></div><div>D. Duplicate work</div><div>&nbsp; &nbsp; Memoization, caching, lookup tables</div>
Trie	a.k.a prefix tree. A trie is a kind of search tree. Instead of storing key in each node, the key is derived from the position in the tree, and a flag that denotes whether the position is a whole key.
Optimization Method<div>D.I.Y.</div>	<div>Do It Yourself<br>Use big examples</div><div>Brain intuits decent algorithms</div><div>Reverse engineer what brain did.</div>
Optimization Method<div>Space/ Time tradeoffs</div>	Speed at the expense of memory<div>Consider if a lookup table(array|hashmap) is worth the setup</div><div>Look up tables, precalculation, memoization</div>
Tree Traversal Methods	Preorder - process node before left and right<div>Inorder - process process left node, curr, then right</div><div>PostOrder - process node after left and right</div><div>Level order - Process nodes n away from root before moving to n+1 i.e. layers or levels a.k.a breadth-first search</div>
Post-Order Traversal	Process 'this' node after both its left and right child nodes.
Preorder Traversal	Process 'this' node before both its left and right child nodes.
Inorder Traversal	Process 'this' nodes left nodte, itself, then right child node.
Level Order	Process nodes at each 'level' before proceeding to the next node.&nbsp;
Big O Notation	Big O only cares about the worst case<div>-&nbsp; &nbsp; for each space and time complexity</div><div>Drop constants</div><div>Drop non-dominant terms</div><div>Add vs Multiply</div><div>Amortized time: worst case happens rarely</div><div>Recursive runtime oftent O(branches<sup>depth</sup>)</div><div>- mention expected case, but Big&nbsp; O worst case</div><div>lines are adding</div><div>nested loops are multiplying</div>
Defensive Copy	"<span style=""color: rgb(112, 117, 122);"">&nbsp;</span><em>Defensive copying</em><span style=""color: rgb(77, 81, 86);"">&nbsp;is a technique which mitigates the negative effects caused by unintentional (or intentional) modifications of shared objects.</span>"
RMI	Remote Method Invocation
OOP Core Concepts	Abstraction<div>Encapsulation</div><div>Polymorphism</div><div>Inheritance</div><div>Composition</div>
OOP Principles	Encapsulate what varies<div>Favor composition over inheritance</div><div>Program to interfaces, not implementations</div><div>Strive for loosely couple designs between objects that interace</div><div>Classes should be open to extension, and closed to modification.</div><div>Depend on abstaction, not concrete classes</div><div>Only talk to your friends - *what?&nbsp;</div><div>Don't call us, we'll call you - *huh?</div><div>A class should have one reason to change.</div>
External Sort	Class of sorting algorithms that handle massive amount that cannot fit within memory
Deque	Double-ended queue or&nbsp;head-tail linked list
Map	"<span style=""color: rgb(71, 71, 71);"">Data Structure that relates one key to one value.</span><div><font color=""#474747"">Hashes keys into buckets for fast (functionally 0(1)) retrieval.<br></font><div><span style=""color: rgb(71, 71, 71);"">Keys should be immutable else experience undefined behavior</span></div></div><div><span style=""color: rgb(71, 71, 71);""><br></span></div>"
Set	A DS that only contains unique elements.
Queue	FIFO Data stucture that supports enqueue at the back, removing from the front.<br>Java Interface<br>boolean add(E&nbsp;e) Insert or Exception if full<br>E element() Retrieve but doesn't remove.<br>boolean offer(E&nbsp;e) Adds if has capacity, else returns false.<br>E peek() Retrieves, but not remove head<br>E poll() Retrieves and removes head, null if empty<br>E remove() - Retrieves and removes head<br>
Stack	LIFO Data Structure that supports push() peek() and pop()<div>Key for DFS and backtracking algorithms</div>
Tree	A DS that is also a graph with specialized structure that expands outward(often 'downwards') towards nodes that have no children called leaves.
List	DS that contains a countable, ordered(not necessarily sorted) number of elements. Often constructed as a LinkedList
Array	A DS of contiguous memory containing elements of one type accessed via an index. Small and efficient but have a fixed size.
Graph	A DS consisting of Edges and Vertices(Nodes). Each Vertex has 0 to n Edges that are connected to other Vertices.<div>Edge connections may be directed or bidirectional, and weighted.</div>
LinkedList	A list created by Nodes that hold a reference to the next Node in the list. Sometimes Nodes also have reference to prev. May contain cycles; be warned!
Topological Sort	An algorithm that performs a DFS on an acyclic DAG the adds nodes to front of a stack as it backtracks.
Starting Ascii values of 0-9, a-z, A-Z	'0' - '9'&nbsp; 48 - 57<br>'A' - 'Z' 65 - 90<div>'a' - 'z'&nbsp; 97- 122</div>
Strongly Connected Component<br>	Regions of graph that anywhere can get to anywhere else
SCC	Strongly Connected Component
Dijkstra's Shortest Path Algorithm	Computes length of paths to all other nodes<div>Workds on directed graphs with non-negative edge lengths</div><div><br></div><div>Solves single-source shortest path problem.</div>
Heap	Data Structure<div>Interface/API</div><div>poll(),&nbsp;</div><div>peak(),&nbsp;</div><div>add()</div><div><br></div><div>Internal Operations</div><div>heapifyUp() - if parent node is larger(minHeap)\smaller(maxHeap), swap</div><div>heapifyDown() starting at top, swap index with min(node, left, right) for minHeap or max(node, left, right) for maxHeap</div><div><br></div><div>Helpers</div><div>int getParentIndex() - (index&nbsp;-&nbsp;1)&nbsp;/&nbsp;2;</div><div>int getLeftChildIndex() -&nbsp; index&nbsp;*&nbsp;2&nbsp;+&nbsp;1;</div><div>int getRightChildIndex() - index&nbsp;*&nbsp;2&nbsp;+&nbsp;2;</div><div>Note: Above only works if default int division behavior is truncation.</div><div><br>boolean hasLeftChild() getLeftChildIndex() &lt; size<br></div><div>boolean hasRightChild() getRightChildIndex &lt; size</div><div>boolean hasParent getParen() &gt;= 0</div>
Queue Interface	Use Deque<div><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Throws exception Returns special value&nbsp;</div><div>Insert&nbsp; &nbsp; &nbsp; add(e)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;offer(e)&nbsp;</div><div>Remove&nbsp; remove()&nbsp; &nbsp; &nbsp; &nbsp; poll()&nbsp;</div><div>Examine element()&nbsp; &nbsp; &nbsp; &nbsp; peek()<br></div>
Functional Interface	- has 1 abstract method<div>- should be marked with @FunctionalInterface</div><div>- Annotation not required, but BP</div><div>- used with/implemented with lambdas</div><div>- e.g. (a) -&gt; a.test</div>
Interfaces	"- classes implements inferfaces, interfaces extend interfaces<div>- no methods required i.e. marker interface</div><div>- cannot be final</div><div>- abstract modifier is automatic</div><div>- interace class is public/default</div><div>- inner interface ignores above rule</div><div>- first nonabstract class must implement all inherited methods</div><div>- interfaces are ""functional"" if has 1 method that is abstract</div>"
Rabin-Karp String Matching Algorithm	When searching for s in b pre comute hashes of s.length in b then search any hashes that match hash(s) exhausively to confirm.<br><br>Can be modified to search anagrams
S.O.L.I.D	Single responsibility<div>Open-closed Principle<br>Liskov Substitution<br>Interface segregation<br>Dependency Inversion</div>
Single Responsiblity	A&nbsp;class&nbsp;should only have a single responsibility, that is, only changes to one part of the software's specification should be able to affect the specification of the class.
Open-closed Principle	"<span style=""color: rgb(34, 34, 34);"">""Software entities&nbsp;... should be open for extension, but closed for modification.""</span>"
Liskov Substitution	"""Objects in a program should be replaceable with instances of their subtypes without altering the correctness of that program."" See also&nbsp;design by contract."
Interface Segregation	Many client-specific interfaces are better than one general-purpose interface.
Dependency Inversion	"<span style=""color: rgb(34, 34, 34);"">One should ""depend upon abstractions, [not] concretions.</span>"
Instance State	Therstate of an concrete object instantiated from a class. Does not include static properties.
Is-A vs. Has-A	Tests to determinte relationships between components<br>Is-A - Indicates an inheritance relationship<div>Has-A - Indicates a composition relationship.</div>
Method Signature	The sum of the components defining the method including name, return type, arguments, and checked exceptions.
Class vs Object	Class is a definition from which objects can them be created.<br><br>Classes are blueprints. Objects are the houses.
Method/ Function	A self-contained set of instructions that can be called.
Virtual functions<div>vs&nbsp;</div><div>Pure virtual functions</div>	Virtual methods make a class a polymorphic base class. Derived classes can override virtual functions.<div>Pure virtual functions (= 0) make a class abstract. The class must be subclasses and the pure functions must be implemented.</div>
Static VS Class Initializer	Static initialization blocks run once the class is loaded by the JVM.<div>Instance initialization blocks run before the constructor each time you instantiate an object.</div><div>Constructor (obviously) run each time you instantiate an object.</div>
Constructor	A special method for initializing objects.
Destructor<div>Vs</div><div>Finalizer</div>	Destructors in C++ can be relied on for closing out resources.<br>Finalizers in Java should not be relied on for closing out resources.
Super/Base/Parent Class	A class from which the current class is derived.
Sub/derived Class	A class which inherits attributes and components of a class for the purposes of extension and/or abstraction/polymorphism
Inheritance	When a class extends another class.
Encapsulation	"<span style=""color: rgb(32, 33, 34);"">The bundling of data with the methods that operate on that data, or the restricting of direct access to some of an object's components.</span><div><font color=""#202122""><br></font><div>Encapsulation is used to hide the values or state of a structured data object inside a&nbsp;class, preventing unauthorized parties' direct access to them.<span style=""color: rgb(32, 33, 34);""><br></span></div><div><span style=""color: rgb(32, 33, 34);""><br></span></div></div>"
Multiple inheritance	Multiple inheritance&nbsp;is a feature of some&nbsp;object-oriented&nbsp;computer&nbsp;programming languages&nbsp;in which an object or&nbsp;class&nbsp;can&nbsp;inherit&nbsp;characteristics and features from more than one parent object or&nbsp;parent class.&nbsp;
Method Overloading vs Overriding	Overloading - keep the same method name but add or remove arguments<div>Overring - Duplicates the method exactly(same signature) while changing its functionality</div>
Producer-Consumer	<div>Producer–consumer problem(also known as the&nbsp;bounded-buffer problem)<br><br>A classic example of a multi-process&nbsp;synchronization&nbsp;problem<br><div><br></div><div>The problem describes two processes, the producer and the consumer, who share a common, fixed-size&nbsp;buffer&nbsp;used as a&nbsp;queue.</div></div>
Method Visibility	Similarly controlled by access modifiers<br>Default<div>Public</div><div>Protected</div><div>Private</div><div>Methods can also be 'hidden' by overriding them</div>
Idempotent	An operationg is idempotent if its effect is the same for multople executions as a single execution
Poinson Pill	Recognizable object used to signal termination in a work queue5
ACID	Properties of Database transaction<div>Atomicity</div><div>Consistency</div><div>Isolation<br>Durabilty</div>
C.R.U.D	Operations performed on a database or a designation for a basic app providing this functionality<br>Create<div>Retrieve</div><div>Update</div><div>Delete</div>
Concurrency Issues	Memory Visibility<div>Dead Lock</div><div>- Mutual Exclusion</div><div>- Hold-and-wait</div><div>- No preemption</div><div>- Circular Wait</div><div>Live Lock</div><div>Starvation</div><div>Interleaving/Ordering</div><div>Atomicity-Violations</div>
OpenFlow Protocol	OpenFlow&nbsp;is a&nbsp;communications protocol&nbsp;that gives access to the&nbsp;forwarding plane&nbsp;of a&nbsp;network switch&nbsp;or&nbsp;router&nbsp;over the network.
Kruskal's Minimum Spanning Tree<div>Algorithm</div>	A&nbsp;minimum-spanning-tree algorithm&nbsp;which finds an edge of the least possible weight that connects any two trees in the forest
Missing Interface sudo cm	cat /proc/net/dev<div>lspci</div><div>sudo lshw -C network</div><div>wpasupplicant not installed by default</div><div>netplan has password in plan text</div><div>Not readable after</div><div>sudo chown root:root path/to/file</div><div>sudo chmod 6t00 path/to/file</div>
Position-Independent Code(PIC)	Code that executes properly regardless of its absolute address
Machine using wrong default network interface	ip route<div>ip route delete &lt;ipaddress&gt;</div><div>ip route add &lt;ipaddress&gt;</div>
netplan	Replaced ifdown<div>/etc/netplan/config.yaml</div>
Stubby	Remote Procedure Call Infrastructure<div>-opensource version gRPC available</div>
Separation of Concerns	In&nbsp;computer science,&nbsp;separation of concerns&nbsp;(SoC) is a design principle for separating a&nbsp;computer program&nbsp;into distinct sections such that each section addresses a separate&nbsp;concern.
Transformations	<div>Transformation methods for&nbsp;LiveData.</div><div>These methods permit functional composition and delegation of&nbsp;LiveData&nbsp;instances. The transformations are calculated lazily, and will run only when the returned&nbsp;LiveData&nbsp;is observed. Lifecycle behavior is propagated from the input&nbsp;source&nbsp;LiveData&nbsp;to the returned one.</div>
Observer	androidx
TLS	Transport Layer Security
SSL	Secure Sockets Layer
TCP	Transport Control Protocol
ICMP	Internet Control Message Protocol
UDP	"User Datagram Protocol<br><br><span style=""color: rgb(34, 34, 34);"">a simple message-oriented transport layer protocol that is documented in RFC 768</span><br><div><span style=""color: rgb(34, 34, 34);""><br></span></div><div><font color=""#222222"">Messages sent in datagram</font></div><div><font color=""#222222""><br></font></div><div><font color=""#222222"">No handshack so must handle unreliabilty of the underlying network.</font></div><div><font color=""#222222"">No guarantee delivery, ordering, or duplicate packet</font></div>"
TCP Handshake	A SYN-&gt; B<div>A &lt;-SYN/ACK B<br></div><div>A ACK-&gt; B<br></div><div>TCp connection established.</div>
TransactionTooLargeException	"<span style=""color: rgb(32, 33, 36);"">The Binder transaction failed because it was too large.</span><div><span style=""color: rgb(32, 33, 36);""><br></span></div><div>During a remote procedure call, the arguments and the return value of the call are transferred as&nbsp;Parcel&nbsp;objects stored in the Binder transaction buffer. If the arguments or the return value are too large to fit in the transaction buffer, then the call will fail and&nbsp;TransactionTooLargeException&nbsp;will be thrown.<span style=""color: rgb(32, 33, 36);""><br></span></div>"
SQL Commands	SELECT<div>UPDATE</div><div>DELETE</div><div>INSERT INTO&nbsp;</div><div>CREATE DATABASE</div><div>ALTER DATABASE</div><div>CREATE TABLE</div><div>ALTER TABLE</div><div>DROP TABLE</div><div>CREATE INDEX</div><div>DROP INDEX</div>
SQL Join	Inner Vs Left Vs Right vs Full Outer<div>Left = table1 right= table2</div><div>INNER - Records that match in both</div><div>LEFT(OUTER) - table2 + matching records from table 2</div><div>RIGHT(OUTER) - matched table2 records + table2</div><div>FULL OUTER - Returns all records when match exists in left or right</div>
SQL LIKE	% 0-many wild card<div>_ single wild card</div><div>MS Access</div><div>* 0-many wildcard</div><div>? single wildcard</div>
TTL	Time to live&nbsp;(TTL) or&nbsp;hop limit&nbsp;is a mechanism that limits the lifespan or lifetime of data in a computer or network. TTL may be implemented as a&nbsp;counter&nbsp;or&nbsp;timestamp&nbsp;attached to or embedded in the data. Once the prescribed event count or timespan has elapsed, data is discarded or revalidated. In&nbsp;computer networking, TTL prevents a data packet from circulating indefinitely.
SQL Modifiers	UNIQUE<div>Primary KEY() - 1 per table, unique, not null</div><div>DEFAULT</div><div>NOT NULL</div><div>AUTO_INCREMENT</div><div>Foreign Key()</div>
SQL Data Types	VARCHAR(size)<div>TEXT(size)</div><div>BLOB(size)</div><div>BIT(size)</div><div>BOOL | BOOLEAN</div><div>INT(size)</div><div>DECIMAL(size, digitsAfterDecimal)</div><div>DATE</div><div>TIMESTAMP</div>
Subnet Mask	"A&nbsp;subnetwork&nbsp;or&nbsp;subnet&nbsp;is a logical subdivision of an&nbsp;IP network.&nbsp;The practice of dividing a network into two or more networks is called&nbsp;subnetting.<br><br><span style=""color: rgb(34, 34, 34);"">a network may also be characterized by its&nbsp;</span><b>subnet mask</b><span style=""color: rgb(34, 34, 34);"">&nbsp;or&nbsp;</span><b>netmask</b><span style=""color: rgb(34, 34, 34);"">, which is the&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Bitmask"">bitmask</a><span style=""color: rgb(34, 34, 34);"">&nbsp;that when applied by a&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Bitwise_AND"">bitwise AND</a><span style=""color: rgb(34, 34, 34);"">&nbsp;operation to any IP address in the network, yields the routing prefix<br></span><br><span style=""color: rgb(34, 34, 34);"">Subnet masks are also expressed in&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Dot-decimal_notation"">dot-decimal notation</a><span style=""color: rgb(34, 34, 34);"">&nbsp;like an address</span><br>"
Inode	Data structure on a filesystem on Linux that stores all file info except name &amp; data
Data packet	IP Packet
SQL Prepared Statements	A&nbsp;prepared statement&nbsp;or&nbsp;parameterized statement&nbsp;is a feature used to execute the same or similar database statements repeatedly with high efficiency.<br><br>Resilient to SQL Injection attacks
SQL Conditional Operators	= Equal<div>&gt;</div><div>&lt;</div><div>&gt;=</div><div>&lt;=</div><div>&lt;&gt; NOT Equal, some use !=</div><div>BETWEEN</div><div>LIKE</div><div>IN</div>
BGP	"<span style=""color: rgb(34, 34, 34);"">Border Gateway Protocol<br></span><span style=""color: rgb(34, 34, 34);"">is a standardized exterior gateway protocol designed to exchange routing and reachability information among autonomous systems (AS) on the Internet.</span><span style=""color: rgb(34, 34, 34);""><br></span>"
MAC Address	Media Access Control address<div>unique identifier assigned to a network interface controller(NIC)</div>
Instantiation	The process of turning creating an object from a class.<div><br></div><div>Concrete classes can be instantiated, but abstract classes cannot.</div>
Ethernet	A family of&nbsp;computer networking&nbsp;technologies commonly used in&nbsp;local area networks&nbsp;(LAN),&nbsp;metropolitan area networks&nbsp;(MAN) and&nbsp;wide area networks&nbsp;(WAN)
DNS	Domain Name System<br><br>A&nbsp;hierarchical&nbsp;and&nbsp;decentralized&nbsp;naming system for computers, services, or other resources connected to the&nbsp;Internet&nbsp;or a private network.<br>
Diffie-Hellman	"Diffie–Hellman key exchange<br><span style=""color: rgb(34, 34, 34);"">a method of securely exchanging cryptographic keys over a public channel.<br></span><span style=""color: rgb(34, 34, 34);"">Asymmetric Encryption Algorithms</span><span style=""color: rgb(34, 34, 34);""><br></span><div><font color=""#222222""><br></font>Paint mixing example</div><div><br></div><div><br></div>"
Shell	The&nbsp;shell&nbsp;is the command interpretor in an operating system such as&nbsp;Unix&nbsp;or&nbsp;GNU/Linux, it is a program that executes other programs.
Invariant	In&nbsp;computer science, one can encounter invariants that can be relied upon to be true during the execution of a program, or during some portion of it. It is a&nbsp;logical assertion&nbsp;that is always held to be true during a certain phase of execution.
Redirection operators	&gt; redirects stdout w/ transaction<div>&gt;&gt; redirects stdout w/ append</div><div>2&gt; redirects stderr via file dscriptor 2</div><div>Note: 0=stdin 1=stdout 2=stderr</div><div>&lt; redirect to stdin</div>
7 Layers of OSI	7. Application<div>6. Presentation</div><div>5. Session</div><div>4. Transport</div><div>3. Network</div><div>2. Data Link</div><div>1. Physical</div>
SSH	"<span style=""color: rgb(55, 55, 55);"">SSH (Secure Shell) protocol<br>SSH Client and SSH Server</span><div><span style=""color: rgb(55, 55, 55);"">Uses&nbsp;</span><span style=""color: rgb(55, 55, 55);"">768 bit Diffie-Hellman</span></div><div><span style=""color: rgb(55, 55, 55);"">Management of SSH keys is vital lest it cause a major risk in larger organizations.</span></div><div><div>ssh-keygen&nbsp;- Create keys</div><div>ssh-copy-id&nbsp;- Provision access on servers</div></div><div>SSH File Transfer Protocol (SFTP)<br></div>"
client-server protocol	"<span style=""color: rgb(34, 34, 34);"">A communications&nbsp;</span><b>protocol</b><span style=""color: rgb(34, 34, 34);"">&nbsp;that provides a structure for requests between&nbsp;</span><b>client</b><span style=""color: rgb(34, 34, 34);"">&nbsp;and&nbsp;</span><b>server</b><span style=""color: rgb(34, 34, 34);"">&nbsp;in a network.<br>Operate in the Application Layer</span><div><span style=""color: rgb(34, 34, 34);""><br>In contrast, some distribuated applications use Peer-to-Peer(P2P)<br><br>Ex. HTTP</span></div>"
Linux Permissions	<div>chmod&nbsp;[OPTION]...&nbsp;OCTAL-MODE FILE...</div><div>chown&nbsp;[OPTION]... [OWNER][:[GROUP]]&nbsp;FILE...<br><br>Permission Groups</div><div>-&nbsp; Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.group&nbsp;</div><div>Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.all users&nbsp;</div><div>- All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.<br><br>Permission Types<div>- Read permission refers to a user’s capability to read the contents of the file.write</div><div>- Write permissions refer to a user’s capability to write or modify a file or directory.execute&nbsp;</div><div>- Execute permission affects a user’s capability to execute a file or view the contents of a directory.<br></div></div>
Memory management	Some languages require manual memory management while others re
System calls	In&nbsp;computing, a&nbsp;system call&nbsp;is the programmatic way in which a&nbsp;computer program&nbsp;requests a service from the&nbsp;kernel&nbsp;of the&nbsp;operating system&nbsp;on which it is executed.
libraries	Static or Dynamic<div>Collection of code that can be packaged and included in a program to reuse functionality</div>
Scheduler	In&nbsp;computing,&nbsp;scheduling&nbsp;is the method by which work is assigned to resources that complete the work. The work may be virtual computation elements such as&nbsp;threads,&nbsp;processes&nbsp;or data&nbsp;flows, which are in turn scheduled onto hardware resources such as&nbsp;processors,&nbsp;network links&nbsp;or&nbsp;expansion cards.<br><br>Types of operating system schedulers<div>Process scheduler<br></div><div>preemptive&nbsp;scheduler Vs.&nbsp;cooperative&nbsp;scheduler<br></div>
Kernel	The&nbsp;kernel&nbsp;is a&nbsp;computer program&nbsp;at the core of a computer's&nbsp;operating system&nbsp;with complete control over everything in the system.&nbsp;It is an integral part of any operating system.
Livelock	"Similiar to deadlock, but the processes continue to appear to function while making no meaningful progress.<br><div><br></div><div>Livelock is a risk with some&nbsp;algorithms&nbsp;that detect and recover from&nbsp;deadlock.<br></div><div><br></div><div><span style=""color: rgb(34, 34, 34);"">This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.</span><br></div>"
Context Switching	A&nbsp;context switch&nbsp;is the process of storing the state of a&nbsp;process&nbsp;or&nbsp;thread, so that it can be restored and resume&nbsp;execution&nbsp;at a later point. This allows multiple processes to share a single&nbsp;CPU, and is an essential feature of a&nbsp;multitasking operating system.
Deadlock	In&nbsp;concurrent computing, a&nbsp;deadlock&nbsp;is a state in which each member of a group is waiting for another member, including itself, to take action, such as sending a message or more commonly releasing a&nbsp;lock<div><br></div><div>Deadlock&nbsp;describes a situation where two or more threads are blocked forever, waiting for each other.<br></div>
Semaphor	"A type of lock.<div><br>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each&nbsp;acquire()&nbsp;blocks if necessary until a permit is available, and then takes it. Each&nbsp;release()&nbsp;adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the&nbsp;Semaphore&nbsp;just keeps a count of the number available and acts accordingly.</div><div><br><span style=""color: rgb(53, 56, 51);"">Semaphores are often used to restrict the number of threads than can access some (physical or logical) resource.&nbsp;</span><br></div>"
Mutex	Another name for a lock<br><br>In&nbsp;computer science, a&nbsp;lock&nbsp;or&nbsp;mutex&nbsp;(from&nbsp;mutual exclusion) is a&nbsp;synchronization&nbsp;mechanism for enforcing limits on access to a resource in an environment where there are many&nbsp;threads of execution. A lock is designed to enforce a&nbsp;mutual exclusion&nbsp;concurrency control&nbsp;policy.
Locks	Another name for a Mutex<br><br>In&nbsp;computer science, a&nbsp;lock&nbsp;or&nbsp;mutex&nbsp;(from&nbsp;mutual exclusion) is a&nbsp;synchronization&nbsp;mechanism for enforcing limits on access to a resource in an environment where there are many&nbsp;threads of execution. A lock is designed to enforce a&nbsp;mutual exclusion&nbsp;concurrency control&nbsp;policy.
QUIC	"""quick"" general-purpose transport layer<div>designed by Jim Roskind at Google</div><div>In draft but used by Chrome to connect To Google Servers aka gQUIC</div><div>Call HTTP over QUIC HTTP/S</div><div>In advance of becoming a standard.</div><div><br></div>"
user-agent	any tool that acts on behalf of the user<div>e.g. web browser, web connected app</div>
Proxy	May perform numerous functions<div>- caching ( cache can be public or private )</div><div>- filtering ( like antivirus scan or parental controls)</div><div>- load balancing ( multiple server s handle requrest )</div><div>- authentication ( control access to resources )&nbsp;</div><div>- logging ( save historical information )</div>
Sharding	"<div>A&nbsp;database shard&nbsp;is a&nbsp;horizontal partition&nbsp;of data in a&nbsp;database&nbsp;or&nbsp;search engine. Each individual partition is referred to as a&nbsp;shard&nbsp;or&nbsp;database shard. Each shard is held on a separate&nbsp;database server&nbsp;instance, to spread load.</div><div>Some data within a database remains present in all shards,<span style=""font-size: 16.6667px;""> </span>but some appears only in a single shard. Each shard (or server) acts as the&nbsp;single&nbsp;source for this subset of data.</div>"
Cookie	"<span style=""color: rgb(34, 34, 34);"">A small piece of data sent from a&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Website"">website</a><span style=""color: rgb(34, 34, 34);"">&nbsp;and stored on the user's computer by the user's&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Web_browser"">web browser</a><span style=""color: rgb(34, 34, 34);"">&nbsp;while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Program_state"">stateful</a><span style=""color: rgb(34, 34, 34);"">&nbsp;information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons,&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Access_control"">logging in</a><span style=""color: rgb(34, 34, 34);"">, or recording which pages were visited in the past</span>"
Internet protocol(IP) suite	The&nbsp;conceptual model&nbsp;and set of&nbsp;communications protocols&nbsp;used in the&nbsp;Internet&nbsp;and similar&nbsp;computer networks. It is commonly known as&nbsp;TCP/IP&nbsp;because the foundational protocols in the suite are the&nbsp;Transmission Control Protocol&nbsp;(TCP) and the&nbsp;Internet Protocol&nbsp;(IP).
TCP/IP	"Common name for Internet protocol suite&nbsp;<span style=""color: rgb(34, 34, 34);"">The foundational protocols in the suite are the&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Transmission_Control_Protocol"">Transmission Control Protocol</a><span style=""color: rgb(34, 34, 34);"">&nbsp;(TCP) and the&nbsp;</span><a href=""https://en.wikipedia.org/wiki/Internet_Protocol"">Internet Protocol</a><span style=""color: rgb(34, 34, 34);"">&nbsp;(IP)</span>"
Datagram	Datagrams are typically structured in&nbsp;header&nbsp;and&nbsp;payload&nbsp;sections. Datagrams provide a&nbsp;connectionless communication&nbsp;service across a packet-switched network. The delivery, arrival time, and order of arrival of datagrams need not be guaranteed by the network.
Backing Field	A&nbsp;field&nbsp;that will be generated for a property in a class only if it uses the default implementation of at least one of the accessors
DRY Principle	Don't Repeat Yourself
Broken Window Theory	"Based on a theory in criminalogy, bad code slowly leads to worse code.<br><br>""No broken windows."""
YAGNI	"""You Aren't Gonna Need It""&nbsp;<div>A principle of&nbsp;extreme programming&nbsp;(XP) that states a&nbsp;programmer&nbsp;should not add functionality until deemed necessary<br><br></div><div><span style=""color: rgb(34, 34, 34);"">""Always implement things when you actually need them, never when you just foresee that you need them."" - Ron Jeffries</span><br></div>"
Adjacency List	A way to represent a graph as a map from notes&nbsp; to a list of edges.<div>Pros</div><div>Space efficient for sparse graphs</div><div>Iterating over all edges is efficient</div><div>Cons</div><div>Less space efficient for denser graphs.</div><div>Edge weight lookup is O(E)</div><div>Slightly more complex representation</div><div><br></div><div>Ex<br><div>A -&gt; B, C</div><div>B&nbsp;-&gt; C, D<br>C -&gt; A</div><div>D -&gt; B</div></div>
Adjacency Matrix	A graph representation using a 2D array.&nbsp;<div><br></div><div>Pros</div><div>Space efficient for dense graphs</div><div>Edge weight lookup is O(1)</div><div>Simplest graph representation<br><div><br></div><div>Cons</div><div>Requires O(V<sup>2</sup>) space</div><div>Iterating all edges takes O(V<sup>2</sup>) time</div><div><br></div><div>Ex.</div><div>matrix[i][j] represents the edge weight of going from node i to node j.</div></div>
Theorem	"<span style=""color: rgb(34, 34, 34);"">A general proposition not self-evident but proved by a chain of reasoning; a truth established by means of accepted truths.</span>"
Corollary	"<span style=""color: rgb(34, 34, 34);"">A proposition that follows from (and is often appended to) one already proved.</span>"
proposition	"A mathematical statement such as ""3 is greater than 4,"" ""an infinite set exists,"" or ""7 is prime."" to be categorized as true or false."
Axiom	A proposition that is assumed to be true.
What are 3 ways to represent a Graph?	&nbsp;- Objects and pointers/references e.g. Node<div>- Adjacency Matrix</div><div>- Adjacency List</div>
URI (Concept)	Uniform Resource Identifiers (URI) provide a simple and extensible means for identifying a resource.<br><br><br> &lt;scheme&gt;:&lt;optionally-specific-part&gt;//&lt;authority&gt;&lt;path&gt;?&lt;query&gt;<br><br>RFC-2396<br>
RFC	Request for Comments<div><br></div><div>A&nbsp;Request for Comments&nbsp;(RFC) is a formal document from the Internet Engineering Task Force ( IETF ) that is the result of committee drafting and subsequent review by interested parties. Some RFCs are informational in nature.<br></div>
Socket (Concept)	A&nbsp;socket&nbsp;is one endpoint of a two-way communication link between two programs running on the network. A socket is bound to a port number so that the TCP layer can identify the application that data is destined to be sent to.
What is the process for sending data over sockets?	<ol><li>Open a socket.</li><li>Open an input stream and output stream to the socket.</li><li>Read from and write to the stream according to the server's protocol.</li><li>Close the streams.</li><li>Close the socket.</li></ol>
Port Knocking	Port knocking&nbsp;is a method of externally opening&nbsp;ports&nbsp;on a&nbsp;firewall&nbsp;by generating a connection attempt on a set of prespecified closed ports. Once a correct sequence of connection attempts is received, the firewall rules are dynamically modified to allow the host which sent the connection attempts to connect over specific port(s).
Datagram (Concept)	An independent, self-contained message sent over the network whose arrival, arrival time, and content are not guaranteed.
What is this:&nbsp;\'	Single quote character
"What is this: \"""	"<span style=""color: rgb(32, 33, 34);"">Escaped double quote</span>"
What is this:&nbsp;\\	Escaped backslash
What is this:&nbsp;\r	carriage return
What is this:&nbsp;\n	New line\ line-feed
What is this:&nbsp;\t	Tab character
What is this:&nbsp;\b	Backspace character
What is this:&nbsp;\0	Null character/ null terminator<div><br></div><div>Not allowed in JSON strings</div>
Standard Streams	standard streams&nbsp;are preconnected input and output&nbsp;communication channels<sup>[1]</sup>&nbsp;between a computer program and its environment when it begins execution. The three&nbsp;input/output&nbsp;(I/O) connections are called&nbsp;standard input&nbsp;(stdin),&nbsp;standard output&nbsp;(stdout) and&nbsp;standard error&nbsp;(stderr). Originally I/O happened via a physically connected&nbsp;system console&nbsp;(input via keyboard, output via monitor), but standard streams abstract this.
Time-of-check to time-of-use(<b>TOCTOU</b>)	a class of&nbsp;software bugs&nbsp;caused by a&nbsp;race condition&nbsp;involving the&nbsp;checking&nbsp;of the state of a part of a system (such as a security credential) and the&nbsp;use&nbsp;of the results of that check.
Time Slicing	A technique for allowing multitasking even on single core/thread processors. A thread of execution is given a certain amout of CPU cycles to execute before its state is saved, a context switch occurs, and another thread is allowed to execute for a while before returning to saved process. The process will them be restored with another context switch.
Thread (Concept)	The smallest unit of execution that can be managed by a scheduler. One or more threads comprise a process.
Process (Concept)	The&nbsp;instance&nbsp;of a&nbsp;computer program&nbsp;that is being executed by one or many threads.&nbsp;
Inter Process Communication&nbsp;(IPC)	Mechanisms for exchanging information outside the current process.<div><br></div><div>Sockets, shared memory, Dbus, Files, Message Queue, Pipe, Memory mapped file</div><div><br></div><div><br></div>
IPC	Inter Process Communication<div><br><div>Mechanisms for exchanging information outside the current process.<div><br></div><div>Sockets, shared memory, Dbus, Files, Message Queue, Pipe, Memory mapped file</div></div></div>
Invocation chaining	aka method chaining aka named parameter idiom.&nbsp;<div><br></div><div>A common syntax where each method returns the object allowing the calls to be chained together into a single statement.</div><div><br></div>
Class Invariant	<div>In&nbsp;computer programming, specifically&nbsp;object-oriented programming, a&nbsp;class invariant&nbsp;(or&nbsp;type invariant) is an&nbsp;invariant&nbsp;used for constraining&nbsp;objects&nbsp;of a&nbsp;class.&nbsp;Methods&nbsp;of the class should preserve the invariant. The class invariant constrains the state stored in the object.</div><div><br></div><div>Class invariants are established during construction and constantly maintained between calls to public methods. Code within functions may break invariants as long as the invariants are restored before a public function ends.</div><div><br></div><div>An object invariant, or representation invariant, is a&nbsp;computer programming&nbsp;construct consisting of a set of invariant properties that remain uncompromised regardless of the state of the&nbsp;object. This ensures that the object will always meet predefined conditions, and that&nbsp;methods&nbsp;may, therefore, always reference the object without the risk of making inaccurate presumptions. Defining class invariants can help programmers and testers to catch more bugs during&nbsp;software testing.</div>
Circular buffer	A&nbsp;circular buffer,&nbsp;circular queue,&nbsp;cyclic buffer&nbsp;or&nbsp;ring buffer&nbsp;is a&nbsp;data structure&nbsp;that uses a single, fixed-size&nbsp;buffer&nbsp;as if it were connected end-to-end. This structure lends itself easily to buffering&nbsp;data streams.
Bijection	A function that maps all elements of one set to all elements of another set in a one-to-one fashion leaving no unpaired elements.
Binary Search Tree	A data structure that is a binary tree as well as satisfying the Binary Search Tree invariant that the right child node has a value larger than the current node and the left child node has a value that is smaller than the current node.
Skip List	In&nbsp;computer science, a&nbsp;skip list&nbsp;is a&nbsp;data structure&nbsp;that allows O(log n)search complexity as well as&nbsp;&nbsp;O(log n)insertion complexity within an&nbsp;ordered sequence&nbsp;of&nbsp;&nbsp;O(log n) elements.&nbsp;
UML Class Diagram	"<img src=""ClassUML.png"">"
What are the four cases for removing a node in a BST?	Node is a leaf. Just set node null on parent and return.<div>Node has a right subtree. The next node moves into this place.</div><div>Node has a left subtree. Same as right subtree only.</div><div>Node has both a left and right subtree.&nbsp;</div>
What two types of components comprise a graph?	Nodes or Vertex/Vertices<div>Edges</div>
Java Generics vs C++ Templates	Generics provide compile-time safety and help eliminate the need for many casts.<div>A C++ templates is reproduced and re-compiled for each class the template is instantiated with.</div>
What is a limitation of Upper Bounded Wildcards?	It becomes illegal to write into the type because the ? is an unknown subclass of the supertype
Fenwick Tree	<div>Values need to be 1-based</div>Operations<div>Construction</div><div>Point Update</div><div>Range Update</div><div>Range Query</div><div>Adding Index</div><div>Removing Index</div><div><br></div><div><br></div>
What is the range of a signed 8-bit number?	-128 to 127
What is the range of a signed 16-bit number?	-32768 to&nbsp;32767
What is the range of a signed 32-bit number?	-2147483648 to&nbsp;2147483647
Two's Complement	"<span style=""color: rgb(32, 33, 34);"">The two's complement is calculated by inverting the digits and adding one</span><div><span style=""color: rgb(32, 33, 34);"">When adding</span></div>"
One's Complement	Inverting all the bits of a numbers binary representation.<div><br></div><div>When adding, carry overflow wraps around.</div>
Suffix Tree	A compressed&nbsp;trie&nbsp;containing all the&nbsp;suffixes&nbsp;of the given text as their keys and positions in the text as their values.
Bipartite Graph	A Graph whose verticies can be split into two independent groups U, V such that every edge connects between U and V.<div><br></div><div>Network Flow</div>
Complete Graph	A graph where there is a unique edge between every pair of nodes.<br><br>A good test for performance as V and E are going to maximal in this case.
Edge List	A list or array of vertex either pairs that represent the edges in a graph or triple representing the nodes and the weight of the edge.&nbsp;
Union-Find	aka disjoint-set data structure<div><br></div><div>A data structure&nbsp;that tracks a&nbsp;set&nbsp;of elements&nbsp;partitioned&nbsp;into a number of&nbsp;disjoint&nbsp;(non-overlapping) subsets. It provides near-constant-time operations (bounded by the inverse&nbsp;Ackermann function) to add new sets, to merge existing sets, and to determine whether elements are in the same set.<br></div>
Binary Search	Search which which splits search space and progressively divides in half searching either the smaller or larger elements until the search key is found.
Priority Queue	aka heap
Dynamic Array	An array whose size isn't fixed. These are backed by astatic array which are copied into larger arrays when full or a linked list.
Hash Map	aka a hash table. Organizes data for fast lookup by hashing the keys then storing them in an array of lists to hold actual values.<div><br></div><div>Fast Lookups</div><div>Flexible Keys</div><div>Takes O(n) worst case</div><div>Keys and values are unordered.</div><div><br></div>
Suffix Array	A sorted array of all the suffixes of a string.
Indexed Priority Queue	Another name for Indexed Heap
Indexed Heap	Searching a heap can take O(n) time. An index heap supports fast searching by keeping an index. This allows fast updating.
Bellman-Ford algorithm	An&nbsp;algorithm&nbsp;that computes&nbsp;shortest paths&nbsp;from a single source&nbsp;vertex&nbsp;to all of the other vertices in a&nbsp;weighted digraph.<div><br></div><div>It is slower than&nbsp;Dijkstra's algorithm&nbsp;for the same problem, but more versatile, as it is capable of handling graphs in which some of the edge weights are negative<br></div>
Tarjan's strongly connected components algorithm	An&nbsp;algorithm&nbsp;in&nbsp;graph theory&nbsp;for finding the&nbsp;strongly connected components&nbsp;of a&nbsp;directed graph. It runs in&nbsp;linear time, matching the time bound for alternative methods including&nbsp;Kosaraju's algorithm&nbsp;and the&nbsp;path-based strong component algorithm.
Prim's Minimum Spanning Tree	A&nbsp;greedy algorithm&nbsp;that finds a&nbsp;minimum spanning tree&nbsp;for a&nbsp;weighted&nbsp;undirected graph.
Brian Kernighan's Bit Counting Algorithm	while (n != 0) {<br>&nbsp; &nbsp; n = n &amp; (n - 1);<br>&nbsp; &nbsp; ones++;<br>}
